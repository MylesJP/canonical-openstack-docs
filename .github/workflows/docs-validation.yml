name: Documenation Funtional Testing

on:
  push:
    branches:
      - main
      - docs-testing
    paths:
      - "tutorial/**/*.task.sh"
      - "how-to/**/*.task.sh"
      - "ci/**"
      - ".github/workflows/docs-validation.yml"
  pull_request:
    branches:
      - main
    paths:
      - "tutorial/**/*.task.sh"
      - "how-to/**/*.task.sh"
      - "ci/**"
      - ".github/workflows/docs-validation.yml"
  workflow_dispatch:         # manual trigger

permissions:
  contents: read

concurrency:
  group: docs-validation-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CI: "true"
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PRINT_PLAN: "1"     # force executor to *only* print what it would run
  DOCS_DRY_RUN: "1"   # guard to disable the real execution step

jobs:
  lint-snippets:
    name: Lint snippet shell files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Discover snippet files
        id: discover
        run: |
          mapfile -d '' SNIPS < <(find tutorial how-to -type f -name '*.task.sh' -print0 2>/dev/null || true)
          printf '%s\0' "${SNIPS[@]}" > all_snippets.null || true
          tr '\0' '\n' < all_snippets.null > all_snippets.txt || true
          COUNT=$(wc -l < all_snippets.txt | tr -d ' ')
          echo "count=${COUNT}" >> "$GITHUB_OUTPUT"
          {
            echo "### Lint target discovery"
            echo ""
            if [[ "$COUNT" -gt 0 ]]; then
              echo "**Found $COUNT snippet files:**"
              echo ""
              sed 's/^/- /' all_snippets.txt
            else
              echo "_No snippet files found._"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Set up Python (for bashate)
        if: steps.discover.outputs.count != '0'
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install bashate
        if: steps.discover.outputs.count != '0'
        run: |
          python -m pip install --upgrade pip
          python -m pip install bashate

      - name: Lint with bashate
        if: steps.discover.outputs.count != '0'
        run: |
          xargs -0 -I {} bash -lc 'bashate -i E006 "{}"' < all_snippets.null

  plan-and-run:
    name: Plan & run docs tests (dry-run only)
    needs: lint-snippets
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed snippet files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            tutorial/**/*.task.sh
            how-to/**/*.task.sh

      - name: Write changed list to file
        id: write-changed
        run: |
          printf '%s\n' "${{ steps.changed.outputs.all_changed_files }}" | sed '/^$/d' > changed_snippets.txt || true
          COUNT=$(wc -l < changed_snippets.txt | tr -d ' ')
          echo "count=${COUNT}" >> "$GITHUB_OUTPUT"
          {
            echo "### Changed snippets"
            echo ""
            if [[ "$COUNT" -gt 0 ]]; then
              echo "**${COUNT} file(s) changed:**"
              echo ""
              sed 's/^/- /' changed_snippets.txt
            else
              echo "_No .task.sh files changed. Skipping execution._"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Short-circuit if nothing to run
        if: steps.write-changed.outputs.count == '0'
        run: exit 0

      - name: Set up Python (executor/selector)
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Build execution plan with selector
        id: plan
        run: |
          python ci/select-doc-pages.py --changed-file-list changed_snippets.txt --out plan.txt
          PLAN_COUNT=$(wc -l < plan.txt | tr -d ' ')
          echo "count=${PLAN_COUNT}" >> "$GITHUB_OUTPUT"
          echo "----- Execution plan -----"
          nl -ba plan.txt || true
          echo "--------------------------"
          {
            echo "### Execution plan"
            echo ""
            if [[ "$PLAN_COUNT" -gt 0 ]]; then
              echo "Plan has **${PLAN_COUNT}** item(s)."
              echo ""
              echo '```'
              cat plan.txt
              echo '```'
            else
              echo "_Selector produced an empty plan._"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Fail if plan empty (unexpected)
        if: steps.plan.outputs.count == '0'
        run: |
          echo "Selector produced an empty plan, but we had changed snippets."
          exit 1

      - name: Dry-run plan printout
        run: |
          # PRINT_PLAN=1 globally ensures this just prints
          python ci/run-doc-pages.py --plan plan.txt || true

      - name: Execute plan
        if: env.DOCS_DRY_RUN != '1'
        run: |
          python ci/run-doc-pages.py --plan plan.txt 2>&1 | tee run.log

      - name: Upload artifacts (plan & logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-validation-artifacts
          path: |
            plan.txt
            changed_snippets.txt
            run.log
